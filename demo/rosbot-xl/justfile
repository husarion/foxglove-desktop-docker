set dotenv-load

[private]
default:
    @just --list --unsorted

[private]
alias flash := flash-firmware
[private]
alias rosbot := start-rosbot
[private]
alias foxglove := run-foxglove

# Copy repo content to remote host with 'rsync' and watch for changes
sync hostname="${ROBOT_HOSTNAME}" password="husarion": _install-rsync _run-as-user
    #!/bin/bash
    sshpass -p "{{password}}" rsync -vRr --exclude='.git/' --delete ./ husarion@{{hostname}}:/home/husarion/${PWD##*/}
    while inotifywait -r -e modify,create,delete,move ./ --exclude='.git/' ; do
        sshpass -p "{{password}}" rsync -vRr --exclude='.git/' --delete ./ husarion@{{hostname}}:/home/husarion/${PWD##*/}
    done

# flash the proper firmware for STM32 microcontroller in ROSbot XL
flash-firmware: _run-as-user
    #!/bin/bash
    echo "Stopping all running containers"
    docker ps -q | xargs -r docker stop

    echo "Flashing the firmware for STM32 microcontroller in ROSbot"
    docker run \
        --rm -it \
        --device /dev/ttyUSBDB \
        --device /dev/bus/usb/ \
        $(yq .services.rosbot.image compose.yaml) \
        ros2 run rosbot_xl_utils flash_firmware --port /dev/ttyUSBDB
        # flash-firmware.py -p /dev/ttyUSBDB # todo

# start containers on a physical ROSbot XL
start-rosbot: _run-as-user
    #!/bin/bash
    mkdir -m 775 -p maps
    docker compose down
    docker compose pull
    docker compose up

# run teleop_twist_keybaord (host)
run-foxglove runtime="cpu": _run-as-user
    #!/bin/bash
    if  [[ "{{runtime}}" == "nvidia" ]] ; then
        echo "Docker runtime: nvidia"
        export DOCKER_RUNTIME=nvidia
        export LIBGL_ALWAYS_SOFTWARE=0
    else
        echo "Docker runtime: runc"
        export DOCKER_RUNTIME=runc
        export LIBGL_ALWAYS_SOFTWARE=1
    fi

    xhost +local:docker
    docker compose -f compose.pc.yaml pull
    docker compose -f compose.pc.yaml up &

    # Assuming the GUI container is named "gui_container" in your compose file
    GUI_CONTAINER_NAME="rosbot-xl-foxglove-1"
    
    sleep 2
    # Wait for the GUI container to exit
    while [ $(docker ps -q -f name=$GUI_CONTAINER_NAME | wc -l) -gt 0 ]; do
        sleep 1
        # echo "GUI container is still running..."
    done

    # Once the GUI container exits, stop all containers
    docker compose -f compose.pc.yaml down test

    echo "All containers stopped."

remove-launcher:
    #!/usr/bin/env bash
    set -euo pipefail
    sudo rm -rf "$HOME/.local/share/applications/foxglove_rosbot_xl.desktop"
    update-desktop-database "$HOME/.local/share/applications/"
    echo "Application launcher for Foxglove ROSbot XL removed."

    # Remove application launcher from the Ubuntu dock
    # Extract the current list of favorites
    FAVORITES=$(gsettings get org.gnome.shell favorite-apps)

    # Modify the favorites list to remove the launcher, if present
    NEW_FAVORITES=$(echo $FAVORITES | sed "s/'foxglove_rosbot_xl.desktop',//g" | sed "s/, 'foxglove_rosbot_xl.desktop'//g" | sed "s/'foxglove_rosbot_xl.desktop'//g")

    # Update the list of favorites
    gsettings set org.gnome.shell favorite-apps "$NEW_FAVORITES"

    echo "Application launcher for Foxglove ROSbot XL removed from the dock."

install-launcher:
    #!/usr/bin/env bash
    set -euo pipefail

    LAUNCHER_PATH="$HOME/.local/share/applications/foxglove_rosbot_xl.desktop"
    CURRENT_DIR=$(pwd)
    ICON_PATH="${CURRENT_DIR}/husarion-signet.png"

    echo "[Desktop Entry]
    Version=1.0
    Type=Application
    Name=Foxglove ROSbot XL
    Exec=gnome-terminal -- bash -c 'just foxglove runc'
    Icon=${ICON_PATH}
    Path=${CURRENT_DIR}
    Terminal=false
    StartupNotify=false" > "${LAUNCHER_PATH}"

    sudo chmod +x "${LAUNCHER_PATH}"
    update-desktop-database "$HOME/.local/share/applications/"
    echo "Application launcher for Foxglove ROSbot XL UI installed."

    # Add application launcher to the Ubuntu dock if not already present
    FAVORITES=$(gsettings get org.gnome.shell favorite-apps)
    LAUNCHER_ID="'foxglove_rosbot_xl.desktop'"

    # Check if the launcher is already in the list of favorites
    if [[ $FAVORITES != *"$LAUNCHER_ID"* ]]; then
        # If not, add it to the list
        NEW_FAVORITES=$(echo $FAVORITES | sed -e "s/]$/, $LAUNCHER_ID]/")
        gsettings set org.gnome.shell favorite-apps "$NEW_FAVORITES"
        echo "Application launcher for Foxglove ROSbot XL added to the dock."
    else
        echo "Application launcher for Foxglove ROSbot XL is already in the dock."
    fi

_run-as-user:
    #!/bin/bash
    if [ "$EUID" -eq 0 ]; then
        echo -e "\e[1;33mPlease re-run as non-root user\e[0m"
        exit 1
    fi

_install-rsync:
    #!/bin/bash
    if ! command -v rsync &> /dev/null || ! command -v sshpass &> /dev/null || ! command -v inotifywait &> /dev/null; then
        if [ "$EUID" -ne 0 ]; then
            echo -e "\e[1;33mPlease run as root to install dependencies\e[0m"
            exit 1
        fi
        apt install -y rsync sshpass inotify-tools
    fi

